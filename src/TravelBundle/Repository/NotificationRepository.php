<?php

namespace TravelBundle\Repository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping\ClassMetadata;
use Doctrine\ORM\Query\Expr\Join;
use TravelBundle\Entity\Notification;
use TravelBundle\Entity\User;

/**
 * NotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * MessageRepository constructor.
     * @param EntityManagerInterface $em
     */
    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em, new ClassMetadata(Notification::class));
    }

    public function findUnread(User $user){
        return $this->createQueryBuilder('notification')
            ->innerJoin('notification.booking', 'booking')
            ->innerJoin('booking.place', 'place')
            ->innerJoin('place.owner', 'owner')
            ->where('owner = :user')
            ->andWhere('notification.isRead = false')
            ->setParameter('user', $user)
            ->getQuery()
            ->getResult();
    }

    public function save(Notification $notification){

        try{
            $this->_em->persist($notification);
            $this->_em->flush();

            return true;
        }catch (\Exception $e){

            echo $e->getMessage();
        }

    }
}
